{% set title = 'client acceuil' %}
{% extends "./layout/layout_nav.html.twig" %}
{% block css %}
    <link rel="stylesheet" href="../../assets/vendor/css/pages/ui-carousel.css"/>
    <link rel="stylesheet" href="../../assets/vendor/libs/swiper/swiper.css"/>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

    <!-- Flipster CSS -->
    <link rel="stylesheet" href="dist/jquery.flipster.min.css">
    <link rel="stylesheet" href="../assets/vendor/css/pages/app-chat.css" />

    <link rel="stylesheet" href="../assets/css/chat.css">
    <!-- Flipster Js -->
    <script src="dist/jquery.flipster.min.js"></script>
{% endblock %}
{% block contenu %}
    <!-- Content -->

    <div class="container-xxl flex-grow-1 container-p-y mt-5">
        <div class="app-chat card ">
            <div class="row g-0">
                <!-- Sidebar Left -->


                <!-- Chat History -->
                <div class="col app-chat-history">
                    <div class="chat-history-wrapper">
                        <div class="chat-history-body">
                            <ul class="list-unstyled chat-history" id="chaturl">










                            </ul>
                        </div>
                        <!-- Chat message form -->
                        <div class="chat-history-footer">
                            <form class="d-flex justify-content-between align-items-center">
                                <input
                                        class="form-control message-input me-3 shadow-none " id="inputchat"
                                        placeholder="Type your message here" name="inputchat" />
                                <div class="message-actions d-flex align-items-center">
                                    </label>
                                    <button class="btn btn-primary d-flex send-msg-btn " id="addchat" type="button" >
                                        <span class="align-middle">Send</span>
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="app-overlay"></div>
            </div>
        </div>
    </div>
    <!-- / Content -->




{% endblock %}

    {% block js %}

        <script src="../assets/js/time-line/client/caroussel.js"></script>
        <script src="../assets/js/time-line/artisan/delete-like-photo.js"></script>
        <script src="../assets/js/time-line/artisan/like-photo.js"></script>
        <script src="../assets/js/time-line/artisan/envent-form.js"></script>
        <script src="../assets/js/time-line/artisan/compression-photo.js"></script>
        <script src="../../assets/vendor/assets/js/form-basic-inputs.js"></script>
        <script src="../../assets/vendor/assets/js/extended-ui-timeline.js"></script>
        <script src="../../assets/vendor/libs/swiper/swiper.js"></script>

        <script>

            const input = document.getElementById('inputchat');
            input.addEventListener('keydown', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    sendMessage();
                }
            });
            // Appeler la fonction pour ajouter le message lorsque l'utilisateur appuie sur "Entrée" dans la zone de texte


            // Appeler la fonction pour ajouter le message lorsque l'utilisateur clique sur le bouton "Envoyer"
            $('#addchat').click(function(event) {
                event.preventDefault();  // empêche le formulaire de se soumettre lors du clic sur le bouton "Envoyer"
                sendMessage();
            });
            // Définir la fonction pour ajouter le message
            function sendMessage() {
                let test = $('#inputchat').val();
                console.log(test);
                $('#inputchat').val('');
                $.ajax({
                    url: '/addchat',
                    type: 'post',
                    dataType: 'json',
                    data: {
                        action: 'add-chat',
                        message: test,
                    },
                    success: function(response) {
                        // Faire quelque chose avec la réponse du serveur, par exemple :
                        // alert(response);
                        // ou mettre à jour la liste des sous-catégories
                        // $('.subcategories-list').append('<li>' + name + '</li>');
                    },
                    error: function(xhr, status, error) {
                        console.log(error);
                        // Gérer l'erreur
                    }
                });
                console.log('test');
            }

            let idUser = "";
            $.ajax({
                type: 'GET',
                url: '/getSessionData', // endpoint créé dans l'étape précédente
                success: function(data) {
                    // data contient les données de session récupérées
                    var mesDonnees = JSON.parse(data);
                    // Utilise mesDonnees dans ton code JavaScript
                    idUser = mesDonnees.iduser ;

                    getMessages() ;
                }
            });

            let nbrmsg = 0;

            function getMessages() {
                let urlchat = $('#chaturl');
                $.ajax({
                    url: '/get-messages',
                    method: 'GET',
                    success: function(response) {
                        var messages = JSON.parse(response);
                        // extraire les messages qui n'ont pas encore été affichés
                        messages = messages.slice(nbrmsg);

                        messages.forEach(function(chat) {

                            // création de l'élément enfant div

                            if ( chat.id_user == idUser){
                                var childDiv = `<li class="chat-message chat-message-right">
           <div class="d-flex overflow-hidden">
               <div class="user-avatar flex-shrink-0 me-3">
                   <div class="avatar avatar-sm">
                       <img src="Data/img_profil_users/`+ idUser+`.jpg" alt="Avatar" class="rounded-circle" />
                   </div>
               </div>
               <div class="chat-message-wrapper flex-grow-1">
                   <div class="chat-message-text">
                       <p class="mb-0">`+ chat.message+ `</p>
                   </div>
                   <div class="text-muted">
                       <small>`+ chat.date+ `</small>
                   </div>
               </div>
           </div>
       </li>`;
                            }else {
                                var childDiv = `<li class="chat-message ">
           <div class="d-flex overflow-hidden">
               <div class="user-avatar flex-shrink-0 me-3">
                   <div class="avatar avatar-sm">
                       <img src="Data/img_profil_users/`+ chat.id_user+ `.jpg" alt="Avatar" class="rounded-circle" />
                   </div>
               </div>
               <div class="chat-message-wrapper flex-grow-1">
                   <div class="chat-message-text">
                       <p class="mb-0">`+ chat.message+ `</p>
                   </div>
                   <div class="text-muted">
                       <small>`+ chat.date+ `</small>
                   </div>
               </div>
           </div>
       </li>`;
                            }

                            // ajout de l'élément enfant au parent avec la classe ".parent"
                            urlchat.append(childDiv);
                            nbrmsg += 1 ;
                            messages = messages.slice(nbrmsg);
                        });
                    }
                });
            }
            setInterval(getMessages, 1000);

        </script>
    {% endblock %}