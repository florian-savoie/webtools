{% set title = 'client acceuil' %}
{% extends "./layout/layout_nav.html.twig" %}
{% block css %}
<link rel="stylesheet" href="../../assets/vendor/css/pages/ui-carousel.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/swiper/swiper.css" />
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Flipster CSS -->
<link rel="stylesheet" href="dist/jquery.flipster.min.css">

<link rel="stylesheet" href="../assets/css/time-line.css">
<!-- Flipster Js -->
<script src="dist/jquery.flipster.min.js"></script>
<!-- Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

<!-- Icons -->
<link rel="stylesheet" href="../../assets/vendor/fonts/materialdesignicons.css" />
<link rel="stylesheet" href="../../assets/vendor/fonts/fontawesome.css" />

<!-- Core CSS -->
<link rel="stylesheet" href="../../assets/vendor/css/rtl/core.css" class="template-customizer-core-css" />
<link rel="stylesheet" href="../../assets/vendor/css/rtl/theme-default.css" class="template-customizer-theme-css" />
<link rel="stylesheet" href="../../assets/css/demo.css" />

<!-- Vendors CSS -->
<link rel="stylesheet" href="../../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/node-waves/node-waves.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/typeahead-js/typeahead.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/bs-stepper/bs-stepper.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/select2/select2.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/tagify/tagify.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/flatpickr/flatpickr.css" />
<link rel="stylesheet" href="../../assets/vendor/libs/formvalidation/dist/css/formValidation.min.css" />

<!-- Page CSS -->

<!-- Helpers -->
<script src="../../assets/vendor/js/helpers.js"></script>

<!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
<!--? Template customizer: To hide customizer set displayCustomizer value false in config.js.  -->
<script src="../../assets/vendor/js/template-customizer.js"></script>
<!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
<script src="../../assets/js/config.js"></script>

{% endblock %}
{% block contenu %}
<!-- Content -->
<!-- Users List Table -->
<div class="container mt-5">
    <div class="card">
 <div class="card-header ">
  <div class="d-flex justify-content-between align-items-center row">
  <h4 class="text-center"> Liste des categories</h4>
    {% include "./components/modifyCategory/category/add.html.twig" %}
  </div>
</div>
        <div class="card-datatable table-responsive">
            <table class="datatables-users table">
                <thead class="table-light">
                  <tr>
                    <th></th>
                    <th></th>
                    <th>nom</th>
                    <th>nombres de sous catégorie</th>
                    <th>nombres d'articles dans cette catégorie</th>
                    <th>modifier</th>
                    <th>supprimer</th>
                  </tr>
                </thead>
                <tbody>
                  {% for category in categorys %}
                    {% set subcategories = [] %}
                    {% for souscategory in souscategorys %}
                      {% if category.id == souscategory.category_id %}
                        {% set subcategories = subcategories|merge([souscategory.name]) %}
                      {% endif %}
                    {% endfor %}
                    <tr style="color: {{ category.color }}">
                      <td></td>
                      <td></td>
                      <td>
                        <div class="accordion-item">
                          <h2 class="accordion-header" id="heading{{ category.id }}">
                            <button style="color: {{ category.color }}" type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#accordionPopout{{ category.id }}" aria-expanded="false" aria-controls="accordionPopout{{ category.id }} ">
                              {{ category.name }}
                            </button>
                          </h2>
                          <div id="accordionPopout{{ category.id }}" class="accordion-collapse collapse" aria-labelledby="heading{{ category.id }}" data-bs-parent="#accordionPopout">
                            <div class="accordion-body">
                              {% if subcategories|length > 0 %}
                                <table class="datatables-users table">
                                  <thead class="table-light">
                                    <tr>
                                      <th style="color: {{ category.color }}">Sous-catégorie</th>
                                      <th></th>
                                      <th>                                                                {% include "./components/modifyCategory/souscategory/add.html.twig" %}

                                      </th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    {% for subcategory in subcategories %}
                                      <tr>
                                        <td style="color: {{ category.color }}">{{ subcategory }}</td>
                                        <td>
                        {% include "./components/modifyCategory/souscategory/update.html.twig" %}
                                        </td>
                                        <td>
                        {% include "./components/modifyCategory/souscategory/delete.html.twig" %}
                                        </td>
                                      </tr>
                                    {% endfor %}
                                  </tbody>
                                </table>
                              {% else %}
                                Aucune sous-catégorie disponible.                          {% include "./components/modifyCategory/souscategory/add.html.twig" %}

                              {% endif %}
                            </div>
                          </div>
                        </div>
                      </td>
                      <td></td>
                      <td></td>
                      <td>
                        {% include "./components/modifyCategory/category/update.html.twig" %}
                      </td>
                      <td>
                        {% include "./components/modifyCategory/category/delete.html.twig" %}
                      </td>
                    </tr>
                  {% endfor %}
                </tbody>
              </table>
        </div>





        {% endblock %}

        {% block js %}

        <script src="../assets/js/time-line/client/caroussel.js"></script>
        <script src="../assets/js/time-line/artisan/delete-like-photo.js"></script>
        <script src="../assets/js/time-line/artisan/like-photo.js"></script>
        <script src="../assets/js/time-line/artisan/envent-form.js"></script>
        <script src="../assets/js/time-line/artisan/compression-photo.js"></script>
        <script src="../../assets/vendor/assets/js/form-basic-inputs.js"></script>
        <script src="../../assets/vendor/assets/js/extended-ui-timeline.js"></script>
        <script src="../../assets/vendor/libs/swiper/swiper.js"></script>
        <!-- build:js assets/vendor/js/core.js -->
        <script src="../../assets/vendor/libs/jquery/jquery.js"></script>
        <script src="../../assets/vendor/libs/popper/popper.js"></script>
        <script src="../../assets/vendor/js/bootstrap.js"></script>
        <script src="../../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
        <script src="../../assets/vendor/libs/node-waves/node-waves.js"></script>

        <script src="../../assets/vendor/libs/hammer/hammer.js"></script>
        <script src="../../assets/vendor/libs/i18n/i18n.js"></script>
        <script src="../../assets/vendor/libs/typeahead-js/typeahead.js"></script>

        <script src="../../assets/vendor/js/menu.js"></script>
        <!-- endbuild -->

        <!-- Vendors JS -->
        <script src="../../assets/vendor/libs/cleavejs/cleave.js"></script>
        <script src="../../assets/vendor/libs/cleavejs/cleave-phone.js"></script>
        <script src="../../assets/vendor/libs/bs-stepper/bs-stepper.js"></script>
        <script src="../../assets/vendor/libs/select2/select2.js"></script>
        <script src="../../assets/vendor/libs/tagify/tagify.js"></script>
        <script src="../../assets/vendor/libs/flatpickr/flatpickr.js"></script>
        <script src="../../assets/vendor/libs/formvalidation/dist/js/FormValidation.min.js"></script>
        <script src="../../assets/vendor/libs/formvalidation/dist/js/plugins/Bootstrap5.min.js"></script>
        <script src="../../assets/vendor/libs/formvalidation/dist/js/plugins/AutoFocus.min.js"></script>

        <!-- Main JS -->
        <script src="../../assets/js/main.js"></script>

        <!-- Page JS -->

        <script src="../../assets/js/wizard-ex-property-listing.js"></script>
        <script>
            
            document.addEventListener('DOMContentLoaded', function () {
                // Sélectionnez tous les éléments collapsibles (accordéons)
                var accordions = document.querySelectorAll('.accordion-collapse');

                // Attachez l'événement 'shown.bs.collapse' à chaque élément collapsible
                accordions.forEach(function (accordion) {
                    accordion.addEventListener('shown.bs.collapse', function () {
                        // Fermez tous les autres éléments collapsibles
                        accordions.forEach(function (otherAccordion) {
                            if (otherAccordion !== accordion) {
                                otherAccordion.classList.remove('show');
                            }
                        });
                    });
                });
            });



document.addEventListener('DOMContentLoaded', function() {
        var modalUpdateCategoryButtons = document.querySelectorAll('.modalupdatecategory');

        modalUpdateCategoryButtons.forEach(function(button) {
            button.addEventListener('click', function() {
                var categoryId = this.dataset.idcategory;
                var inputId = "updatecategory-input-" + categoryId;
                var inputcolor = "category-color-" + categoryId;
                var newCategoryName = document.getElementById(inputId).value;
                var newCategorycolor = document.getElementById(inputcolor).value;

                // Effectuer la requête Ajax
                $.ajax({
                    url: '/update-category',
                    method: 'POST',
                    data: {
                        action: 'update-category',
                        newname: newCategoryName,
                        idligne: categoryId,
                        color: newCategorycolor,
                    },
                    dataType: 'json',
                    success: function(response) {
                        if (response.hasOwnProperty('error')) {
                            console.log('Erreur lors de la modification :', response.error);
                        } else {
                            console.log(response);
                                                    window.location.href = "/showcategory";

                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Une erreur s\'est produite lors de la requête :', error);
                    }
                });
            });
        });
    });






            document.querySelectorAll('.modaldeletecategory').forEach(function (modaldelet) {
    modaldelet.addEventListener('click', function () {
        var idligne = this.dataset.idcategory;
        console.log(idligne);
        // Effectuer la requête Ajax
        $.ajax({
            url: '/delete-category',
            method: 'POST',
            data: {
                action: 'delete-category',
                idligne: idligne,
            },
            dataType: 'json', // Attendre une réponse JSON du serveur
            success: function (response) {
                // Vérifier la réponse du serveur
                if (response.hasOwnProperty('error')) {
                    // Erreur lors de l'ajout du vote
                    console.log('Erreur lors de l\'ajout du vote :', response.error);
                } else {
                    // Le vote a été ajouté avec succès

                    console.log(response);
                                                                window.location.href = "/showcategory";

                }
            },
            error: function (xhr, status, error) {
                // Gérer les erreurs lors de la requête Ajax
                console.error('Une erreur s\'est produite lors de la requête :', error);
            }
        });
    });
});


            document.querySelectorAll('.modalCenterdellsouscat').forEach(function (modaldelet) {
    modaldelet.addEventListener('click', function () {
        var name = this.dataset.idsouscategory;
        var idcategory = this.dataset.idcategory;
        console.log(name);
        console.log(idcategory);
        // Effectuer la requête Ajax
        $.ajax({
            url: '/delete-souscategory',
            method: 'POST',
            data: {
                action: 'delete-souscategory',
                name: name,
                idcategory: idcategory,
            },
            dataType: 'json', // Attendre une réponse JSON du serveur
            success: function (response) {
                // Vérifier la réponse du serveur
                if (response.hasOwnProperty('error')) {
                    // Erreur lors de l'ajout du vote
                    console.log('Erreur lors de l\'ajout du vote :', response.error);
                } else {
                    // Le vote a été ajouté avec succès

                    console.log(response);
                                                                                    window.location.href = "/showcategory";


                }
            },
            error: function (xhr, status, error) {
                // Gérer les erreurs lors de la requête Ajax
                console.error('Une erreur s\'est produite lors de la requête :', error);
            }
        });
    });
});




             $(document).ready(function() {
        // au click sur le bouton d'ajout
        $('#addcategory').click(function() {
            // Récupération de la valeur de l'input category-input
            var namecategory = $('#category-input').val();
            var colortegory = $('#category-color').val();
            console.log(namecategory);
            // Effectuer la requête Ajax
            $.ajax({
                url: '/add-category',
                method: 'POST',
                data: {
                    action: 'add-category',
                    namecategory: namecategory,
                    colortegory: colortegory,
                },
                dataType: 'json', // Attendre une réponse JSON du serveur
                success: function (response) {
                    // Vérifier la réponse du serveur
                    if (response.hasOwnProperty('error')) {
                        // Erreur lors de l'ajout de la catégorie
                        console.log('Erreur lors de l\'ajout de la catégorie :', response.error);
                    } else {
                        // La catégorie a été ajoutée avec succès
                        console.log(response);
                        window.location.href = "/showcategory";


                    }
                },
                error: function (xhr, status, error) {
                    // Gérer les erreurs lors de la requête Ajax
                    console.error('Une erreur s\'est produite lors de la requête :', error);
                }
            });
        });
    });

document.addEventListener('DOMContentLoaded', function() {
    var modalUpdatesousCategoryButtons = document.querySelectorAll('.modalupdatesouscategory');
    modalUpdatesousCategoryButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            var categoryId = this.dataset.idcategory;
            var namesouscat = this.dataset.namesouscategory;
            var inputId = "updatesouscategory-input-" + categoryId + namesouscat;
            var name = document.getElementById(inputId).value;
console.log(namesouscat);
console.log(name);
console.log(categoryId);
            // Effectuer la requête Ajax
            $.ajax({
                url: '/update-souscategory',
                method: 'POST',
                data: {
                    action: 'update-souscategory',
                    name: name,
                    idcategory: categoryId,
                    ancienname: namesouscat
                },
                dataType: 'json',
                success: function(response) {
                    if (response.hasOwnProperty('error')) {
                        console.log('Erreur lors de la modification :', response.error);
                    } else {
                        console.log(response);
                        window.location.href = "/showcategory";
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Une erreur s\'est produite lors de la requête :', error);
                }
            });
        });
    });
});


            document.querySelectorAll('.modalCenterdellsouscat').forEach(function (modaldelet) {
    modaldelet.addEventListener('click', function () {
        var name = this.dataset.idsouscategory;
        var idcategory = this.dataset.idcategory;
        console.log(name);
        console.log(idcategory);
        // Effectuer la requête Ajax
        $.ajax({
            url: '/delete-souscategory',
            method: 'POST',
            data: {
                action: 'delete-souscategory',
                name: name,
                idcategory: idcategory,
            },
            dataType: 'json', // Attendre une réponse JSON du serveur
            success: function (response) {
                // Vérifier la réponse du serveur
                if (response.hasOwnProperty('error')) {
                    // Erreur lors de l'ajout du vote
                    console.log('Erreur lors de l\'ajout du vote :', response.error);
                } else {
                    // Le vote a été ajouté avec succès

                    console.log(response);
                                                                                    window.location.href = "/showcategory";


                }
            },
            error: function (xhr, status, error) {
                // Gérer les erreurs lors de la requête Ajax
                console.error('Une erreur s\'est produite lors de la requête :', error);
            }
        });
    });
});
$('.addsouscategory').click(function() {

    let name = $('#souscategory-input-' + $(this).data('idcategory')).val();
    let idcategory = $(this).data('idcategory');

    $.ajax({
        url: '/add-souscategory',
        type: 'post',
        dataType: 'json',
        data: {
            action: 'add-souscategory',
            name: name,
            idcategory: idcategory
        },
        success: function(response) {
            console.log(response);
                                                                                        window.location.href = "/showcategory";

        },
        error: function(xhr, status, error) {
            console.log(error);
            // Gérer l'erreur
        }
    });

});add-souscategory


        </script>

        {% endblock %}